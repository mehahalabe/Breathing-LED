


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Your Names**update this***
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 1/18/2019
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 2 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE2 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE3 is LED output (1 activates external LED on protob
                       oard)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE3 an output and make PE2 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 2H
                       z,
   15 00000000         ;      which is 2 times per second with a duty-cycle of 
                       30%.
   16 00000000         ;      Therefore, the LED is ON for 150ms and off for 35
                       0 ms.
   17 00000000         ;   3) When the button (PE1) is pressed-and-released inc
                       rease
   18 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   19 00000000         ;      press-and-release the duty cycle changes from 30%
                        to 70% to 70%
   20 00000000         ;      to 90% to 10% to 30% so on
   21 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   22 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   23 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   24 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   25 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 2Hz.
   26 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   27 00000000         ;         cycle or reset to 30%.
   28 00000000         ;      TIP: debugging the breathing LED algorithm using 
                       the real board.
   29 00000000         ; PortE device registers
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C



ARM Macro Assembler    Page 2 


   34 00000000         ; PortF device registers
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   39 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   40 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   41 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   42 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   43 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   44 00000000         
   45 00000000                 IMPORT           TExaS_Init
   46 00000000                 THUMB
   47 00000000                 AREA             DATA, ALIGN=2
   48 00000000         ;global variables go here
   49 00000000         
   50 00000000         
   51 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   52 00000000         ;cycles DCD 190000,150000,100000,50000,10000,50000,10000
                       0,150000,190000
   53 00000000         ;value DCD 200000
   54 00000000 0002FDA0 
                       cycles  DCD              196000
   55 00000004 00000FA0 
                       value   DCD              4000
   56 00000008 00030D40 
                       amt     DCD              200000
   57 0000000C 007F9040 
              005AF140 
              003698CC 
              00126768 
              00A3BA10 duty    DCD              8360000,5960000,3578060,1206120
,10730000
   58 00000020         ;duty DCD 9000000,7000000,5000000,3000000,1000000
   59 00000020         ;dutyON DCD 1000000,3000000,5000000,7000000,9000000
   60 00000020         ;subval DCD 1000000
   61 00000020 001E7CEC 
              0032A8C0 
              0046D494 



ARM Macro Assembler    Page 3 


              005B3F60 
              000A5118 dutyON  DCD              1998060,3320000,4641940,5980000
,676120
   62 00000034 00AA22B0 
                       evalue  DCD              11150000
   63 00000038 00A3BA10 
                       subval  DCD              10730000
   64 0000003C                 THUMB
   65 0000003C                 EXPORT           Start
   66 0000003C         Start
   67 0000003C         ; TExaS_Init sets bus clock at 80 MHz
   68 0000003C F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   69 00000040         ; Initialization goes here
   70 00000040 4955            LDR              R1,=SYSCTL_RCGCGPIO_R ;turning 
                                                            on the clock
   71 00000042 7808            LDRB             R0,[R1]
   72 00000044 F040 0030       ORR              R0,#0X30
   73 00000048 7008            STRB             R0,[R1]
   74 0000004A BF00            NOP                          ;wait for stabiliza
                                                            tion bc 4 clock cyc
                                                            les to completely s
                                                            tabilize
   75 0000004C BF00            NOP
   76 0000004E BF00            NOP
   77 00000050 BF00            NOP
   78 00000052 4952            LDR              R1,=GPIO_PORTE_DIR_R ;set direc
                                                            tion (which ones ar
                                                            e input and which o
                                                            nes are output)
   79 00000054 7808            LDRB             R0,[R1]
   80 00000056 F040 0008       ORR              R0, #0X08
   81 0000005A F000 00FB       AND              R0, #0XFB
   82 0000005E 7008            STRB             R0,[R1]
   83 00000060 494F            LDR              R1, =GPIO_PORTE_DEN_R ;set digi
                                                            tal enable (we use 
                                                            4 pins)
   84 00000062 7808            LDRB             R0,[R1]
   85 00000064 F040 00FC       ORR              R0, #0XFC
   86 00000068 7008            STRB             R0,[R1]
   87 0000006A 494E            LDR              R1, =GPIO_PORTF_DIR_R
   88 0000006C 7808            LDRB             R0,[R1]
   89 0000006E F000 0000       AND              R0,#0X00
   90 00000072 F000 00FF       AND              R0, #0XFF
   91 00000076 7008            STRB             R0,[R1]
   92 00000078 494B            LDR              R1, =GPIO_PORTF_DEN_R ;set digi
                                                            tal enable (we use 
                                                            4 pins)
   93 0000007A 7808            LDRB             R0,[R1]
   94 0000007C F040 0010       ORR              R0, #0X10
   95 00000080 7008            STRB             R0,[R1]
   96 00000082 484A            LDR              R0, =GPIO_PORTF_LOCK_R 
                                                            ;unlock port f
   97 00000084 494A            LDR              R1, =GPIO_LOCK_KEY
   98 00000086 6001            STR              R1,[R0]
   99 00000088 494A            LDR              R1, =GPIO_PORTF_PUR_R
  100 0000008A 7808            LDRB             R0,[R1]
  101 0000008C F040 0010       ORR              R0, #0X10
  102 00000090 7008            STRB             R0,[R1]



ARM Macro Assembler    Page 4 


  103 00000092         
  104 00000092 4949            LDR              R1, =GPIO_PORTF_CR_R
  105 00000094 7808            LDRB             R0,[R1]
  106 00000096 F040 00FF       ORR              R0, #0XFF
  107 0000009A 7008            STRB             R0,[R1]
  108 0000009C 4947            LDR              R1, =GPIO_PORTF_AFSEL_R
  109 0000009E 7808            LDRB             R0,[R1]
  110 000000A0 F020 0010       BIC              R0,R0,#0X10
  111 000000A4 7008            STRB             R0,[R1]
  112 000000A6         
  113 000000A6 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupt
  114 000000A8         
  115 000000A8         
  116 000000A8         loop
  117 000000A8         ; main engine goes here
  118 000000A8         
  119 000000A8 4C45            LDR              R4,=duty    ;load variables int
                                                            o registers
  120 000000AA 6826            LDR              R6,[R4]
  121 000000AC F8D4 8000       LDR              R8,[R4]
  122 000000B0 4944            LDR              R1,=dutyON
  123 000000B2 4F45            LDR              R7,=evalue
  124 000000B4 6827            LDR              R7,[R4]
  125 000000B6         
  126 000000B6         
  127 000000B6         dloop
  128 000000B6 4A45            LDR              R2,=GPIO_PORTE_DATA_R ;check to
                                                             see if pe2 has bee
                                                            n set
  129 000000B8 6813            LDR              R3,[R2]
  130 000000BA 2B04            CMP              R3,#0X04
  131 000000BC D111            BNE              dutyCycleLoop ;if it isnt press
                                                            ed continue current
                                                             cycle
  132 000000BE D0FF            BEQ              check       ;if it is pressed, 
                                                            wait for button to 
                                                            be released
  133 000000C0         check
  134 000000C0 6813            LDR              R3,[R2]
  135 000000C2 2B00            CMP              R3,#0X00    ;check to see if bu
                                                            tton has been relea
                                                            sed
  136 000000C4 D1FC            BNE              check       ;keep polling till 
                                                            button has been rel
                                                            eased
  137 000000C6 D0FF            BEQ              addloop     ;once button is rel
                                                            eased, go to change
                                                             duty cycle
  138 000000C8         
  139 000000C8         addloop
  140 000000C8 4D41            LDR              R5, =subval
  141 000000CA 682D            LDR              R5,[R5]     ;R5 stores the valu
                                                            e to be subtracted 
                                                            from
  142 000000CC 6826            LDR              R6,[R4]     ;R6 VALUE FROM ARRA
                                                            Y
  143 000000CE EBB6 0A05       SUBS             R10,R6,R5



ARM Macro Assembler    Page 5 


  144 000000D2 D0E9            BEQ              loop        ;Branch back to loo
                                                            p the array if at e
                                                            nd
  145 000000D4 F104 0404       ADD              R4,R4,#4    ;move to next value
                                                             in array
  146 000000D8 F101 0104       ADD              R1,R1,#4
  147 000000DC 6826            LDR              R6,[R4]
  148 000000DE F8D4 8000       LDR              R8,[R4]
  149 000000E2         dutyCycleLoop
  150 000000E2         
  151 000000E2 F8DF 90F0       LDR              R9, =GPIO_PORTF_DATA_R
  152 000000E6 F8D9 A000       LDR              R10,[R9]
  153 000000EA F1BA 0F00       CMP              R10,#0      ;check to see if pf
                                                            4 has been pressed
  154 000000EE D016            BEQ              floop       ;branch to breathin
                                                            g
  155 000000F0 6826            LDR              R6, [R4]
  156 000000F2 F8D4 8000       LDR              R8,[R4]
  157 000000F6         
  158 000000F6         delay                                ;run the duty cycle
                                                            
  159 000000F6 3E01            SUBS             R6,#1
  160 000000F8 D1FD            BNE              delay
  161 000000FA         
  162 000000FA F003 0300       AND              R3,R3,#0
  163 000000FE F043 0308       ORR              R3,R3,#0X08
  164 00000102         
  165 00000102 6013            STR              R3,[R2]     ;turn the light on
  166 00000104         
  167 00000104 F8D1 9000       LDR              R9,[R1]
  168 00000108         delay1                               ;delay for light on
                                                            
  169 00000108 F1B9 0901       SUBS             R9,#1
  170 0000010C D1FC            BNE              delay1
  171 0000010E         
  172 0000010E F003 03F7       AND              R3,R3,#0xF7
  173 00000112 6013            STR              R3,[R2]     ;turn light off
  174 00000114         
  175 00000114 4A2D            LDR              R2,=GPIO_PORTE_DATA_R
  176 00000116 6813            LDR              R3,[R2]
  177 00000118 2B04            CMP              R3,#0X04    ;check to see if pe
                                                            2 has been pressed 
                                                            
  178 0000011A D1E2            BNE              dutyCycleLoop ;if not, loop cur
                                                            rent duty cycle
  179 0000011C D0D0            BEQ              check       ;if so, branch back
                                                             to check if 0
  180 0000011E         
  181 0000011E         floop
  182 0000011E F8DF C0AC       LDR              R12, =GPIO_PORTE_DATA_R
  183 00000122 4B2D            LDR              R3, =cycles
  184 00000124 681A            LDR              R2,[R3]
  185 00000126 681B            LDR              R3,[R3]
  186 00000128 4D2C            LDR              R5,=amt
  187 0000012A 682D            LDR              R5,[R5]
  188 0000012C F8DF B0B0       LDR              R11,=value
  189 00000130 F8DB B000       LDR              R11,[R11]
  190 00000134         
  191 00000134         delay2



ARM Macro Assembler    Page 6 


  192 00000134 3B01            SUBS             R3, #1
  193 00000136 D1FD            BNE              delay2
  194 00000138         
  195 00000138 F008 0800       AND              R8,R8,#0
  196 0000013C F048 0808       ORR              R8,R8,#0x08
  197 00000140 F8CC 8000       STR              R8,[R12]
  198 00000144 1AAB            SUBS             R3,R5,R2
  199 00000146         delay3
  200 00000146 3B01            SUBS             R3,#1
  201 00000148 D1FD            BNE              delay3
  202 0000014A         
  203 0000014A EBB2 030B       SUBS             R3,R2,R11
  204 0000014E EBB2 020B       SUBS             R2,R2,R11   ;R2 has 0 after cyc
                                                            les is done
  205 00000152 D114            BNE              nzdelay
  206 00000154         debreathe
  207 00000154 445A            ADD              R2,R2,R11
  208 00000156 4613            MOV              R3,R2
  209 00000158         delay4
  210 00000158 3B01            SUBS             R3, #1
  211 0000015A D1FD            BNE              delay4
  212 0000015C         
  213 0000015C F008 0800       AND              R8,R8,#0
  214 00000160 F048 0808       ORR              R8,R8,#0x08
  215 00000164 F8CC 8000       STR              R8,[R12]
  216 00000168 1AAB            SUBS             R3,R5,R2
  217 0000016A         delay5
  218 0000016A 3B01            SUBS             R3,#1
  219 0000016C D1FD            BNE              delay5
  220 0000016E         
  221 0000016E F008 0800       AND              R8,R8,#0
  222 00000172 F8CC 8000       STR              R8,[R12]
  223 00000176 4B18            LDR              R3, =cycles
  224 00000178 681B            LDR              R3,[R3]
  225 0000017A 429A            CMP              R2,R3
  226 0000017C D1EA            BNE              debreathe
  227 0000017E         nzdelay
  228 0000017E F008 0800       AND              R8,R8,#0
  229 00000182 F8CC 8000       STR              R8,[R12]
  230 00000186 F8DF 904C       LDR              R9, =GPIO_PORTF_DATA_R 
                                                            ;check for 0
  231 0000018A F8D9 A000       LDR              R10,[R9]
  232 0000018E F1BA 0A10       SUBS             R10,R10,#0X10
  233 00000192 D090            BEQ              dloop
  234 00000194 E7CE            B                delay2
  235 00000196         ; B    loop
  236 00000196         
  237 00000196         
  238 00000196 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  239 00000198                 END                          ; end of file
              400FE608 
              40024400 
              4002451C 
              40025400 
              4002551C 
              40025520 
              4C4F434B 



ARM Macro Assembler    Page 7 


              40025510 
              40025524 
              40025420 
              00000000 
              00000000 
              00000000 
              400243FC 
              00000000 
              400253FC 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab3 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\
5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Inclu
de\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526"
 --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\main.lst
 main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: .text unused
Start 0000003C

Symbol: Start
   Definitions
      At line 66 in file main.s
   Uses
      At line 65 in file main.s
Comment: Start used once
addloop 000000C8

Symbol: addloop
   Definitions
      At line 139 in file main.s
   Uses
      At line 137 in file main.s
Comment: addloop used once
amt 00000008

Symbol: amt
   Definitions
      At line 56 in file main.s
   Uses
      At line 186 in file main.s
Comment: amt used once
check 000000C0

Symbol: check
   Definitions
      At line 133 in file main.s
   Uses
      At line 132 in file main.s
      At line 136 in file main.s
      At line 179 in file main.s

cycles 00000000

Symbol: cycles
   Definitions
      At line 54 in file main.s
   Uses
      At line 183 in file main.s
      At line 223 in file main.s

debreathe 00000154

Symbol: debreathe
   Definitions
      At line 206 in file main.s
   Uses
      At line 226 in file main.s
Comment: debreathe used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

delay 000000F6

Symbol: delay
   Definitions
      At line 158 in file main.s
   Uses
      At line 160 in file main.s
Comment: delay used once
delay1 00000108

Symbol: delay1
   Definitions
      At line 168 in file main.s
   Uses
      At line 170 in file main.s
Comment: delay1 used once
delay2 00000134

Symbol: delay2
   Definitions
      At line 191 in file main.s
   Uses
      At line 193 in file main.s
      At line 234 in file main.s

delay3 00000146

Symbol: delay3
   Definitions
      At line 199 in file main.s
   Uses
      At line 201 in file main.s
Comment: delay3 used once
delay4 00000158

Symbol: delay4
   Definitions
      At line 209 in file main.s
   Uses
      At line 211 in file main.s
Comment: delay4 used once
delay5 0000016A

Symbol: delay5
   Definitions
      At line 217 in file main.s
   Uses
      At line 219 in file main.s
Comment: delay5 used once
dloop 000000B6

Symbol: dloop
   Definitions
      At line 127 in file main.s
   Uses
      At line 233 in file main.s
Comment: dloop used once
duty 0000000C




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: duty
   Definitions
      At line 57 in file main.s
   Uses
      At line 119 in file main.s
Comment: duty used once
dutyCycleLoop 000000E2

Symbol: dutyCycleLoop
   Definitions
      At line 149 in file main.s
   Uses
      At line 131 in file main.s
      At line 178 in file main.s

dutyON 00000020

Symbol: dutyON
   Definitions
      At line 61 in file main.s
   Uses
      At line 122 in file main.s
Comment: dutyON used once
evalue 00000034

Symbol: evalue
   Definitions
      At line 62 in file main.s
   Uses
      At line 123 in file main.s
Comment: evalue used once
floop 0000011E

Symbol: floop
   Definitions
      At line 181 in file main.s
   Uses
      At line 154 in file main.s
Comment: floop used once
loop 000000A8

Symbol: loop
   Definitions
      At line 116 in file main.s
   Uses
      At line 144 in file main.s
Comment: loop used once
nzdelay 0000017E

Symbol: nzdelay
   Definitions
      At line 227 in file main.s
   Uses
      At line 205 in file main.s
Comment: nzdelay used once
subval 00000038

Symbol: subval
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 63 in file main.s
   Uses
      At line 140 in file main.s
Comment: subval used once
value 00000004

Symbol: value
   Definitions
      At line 55 in file main.s
   Uses
      At line 188 in file main.s
Comment: value used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 42 in file main.s
   Uses
      At line 97 in file main.s
Comment: GPIO_LOCK_KEY used once
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 128 in file main.s
      At line 175 in file main.s
      At line 182 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 83 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 78 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 108 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 104 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 151 in file main.s
      At line 230 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 92 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 87 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 96 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 99 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 70 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 68 in file main.s
Comment: TExaS_Init used once
1 symbol
374 symbols in table
